diff --git a/.gitignore b/.gitignore
index 2f6aa86..0e0a9dd 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1,3 +1,3 @@
 node_modules
 keys/keys.dev.js
-.idea
\ No newline at end of file
+.idea
diff --git a/middleware/roles.js b/middleware/roles.js
new file mode 100644
index 0000000..2e45e25
--- /dev/null
+++ b/middleware/roles.js
@@ -0,0 +1,11 @@
+module.exports = (roles) => (req, res, next) => {
+    const preparedRoles = Array.isArray(roles) ? roles : [roles]
+    const userRoles = req.user.roles || []
+    const isHasRole = preparedRoles.every(role => userRoles.includes(role))
+
+    if (!isHasRole) {
+        return res.redirect('/')
+    }
+
+    next()
+}
diff --git a/middleware/variables.js b/middleware/variables.js
index eb02185..8bb1f46 100644
--- a/middleware/variables.js
+++ b/middleware/variables.js
@@ -1,5 +1,6 @@
 module.exports = function(req, res, next) {
   res.locals.isAuth = req.session.isAuthenticated
+  res.locals.isAdmin = ((req.session.user || {}).roles || []).includes('admin')
   res.locals.csrf = req.csrfToken()
   next()
-}
\ No newline at end of file
+}
diff --git a/migrations/20241211153329-add-role-to-users.js b/migrations/20241211153329-add-role-to-users.js
new file mode 100644
index 0000000..cdd2f36
--- /dev/null
+++ b/migrations/20241211153329-add-role-to-users.js
@@ -0,0 +1,14 @@
+'use strict';
+/** @type {import('sequelize-cli').Migration} */
+const tableName = 'users'
+
+module.exports = {
+  async up(queryInterface, Sequelize) {
+    await queryInterface.addColumn(tableName, 'roles', {
+      type: Sequelize.JSONB
+    });
+  },
+  async down(queryInterface, Sequelize) {
+    await queryInterface.removeColumn(tableName, 'roles');
+  }
+};
diff --git a/migrations/20241211161741-add-isActive-to-courses.js b/migrations/20241211161741-add-isActive-to-courses.js
new file mode 100644
index 0000000..f66b024
--- /dev/null
+++ b/migrations/20241211161741-add-isActive-to-courses.js
@@ -0,0 +1,15 @@
+'use strict';
+/** @type {import('sequelize-cli').Migration} */
+const tableName = 'courses'
+
+module.exports = {
+  async up(queryInterface, Sequelize) {
+    await queryInterface.addColumn(tableName, 'isActive', {
+      type: Sequelize.BOOLEAN,
+      defaultValue: true,
+    });
+  },
+  async down(queryInterface, Sequelize) {
+    await queryInterface.removeColumn(tableName, 'isActive');
+  }
+};
diff --git a/models/courses.js b/models/courses.js
index 9efeb36..9c4427c 100644
--- a/models/courses.js
+++ b/models/courses.js
@@ -24,6 +24,10 @@ module.exports = (sequelize, DataTypes) => {
         title: DataTypes.STRING,
         price: DataTypes.DOUBLE,
         img: DataTypes.STRING,
+        isActive: {
+            type: DataTypes.BOOLEAN,
+            defaultValue: true,
+        },
         createdAt: DataTypes.DATE,
         updatedAt: DataTypes.DATE
     }, {
diff --git a/models/user.js b/models/user.js
index ea72c9a..056b28d 100644
--- a/models/user.js
+++ b/models/user.js
@@ -26,6 +26,7 @@ module.exports = (sequelize, DataTypes) => {
         avatarUrl: DataTypes.STRING,
         resetToken: DataTypes.STRING,
         resetTokenExp: DataTypes.STRING,
+        roles: DataTypes.JSONB,
         createdAt: DataTypes.DATE,
         updatedAt: DataTypes.DATE
     }, {
diff --git a/routes/add.js b/routes/add.js
index daf76f9..cfd0cea 100644
--- a/routes/add.js
+++ b/routes/add.js
@@ -1,6 +1,7 @@
 const {Router} = require('express')
 const {validationResult} = require('express-validator/check')
 const auth = require('../middleware/auth')
+const roles = require('../middleware/roles')
 const {courseValidators} = require('../utils/validators')
 const db = require('../models')
 const router = Router()
@@ -12,7 +13,7 @@ router.get('/', auth, (req, res) => {
   })
 })
 
-router.post('/', auth, courseValidators, async (req, res) => {
+router.post('/', auth, roles('admin'), courseValidators, async (req, res) => {
   const errors = validationResult(req)
 
   if (!errors.isEmpty()) {
diff --git a/routes/auth.js b/routes/auth.js
index 2e280cf..ee59076 100644
--- a/routes/auth.js
+++ b/routes/auth.js
@@ -34,11 +34,11 @@ router.post('/login', async (req, res) => {
   try {
     const {email, password} = req.body
 
-    const candidate = await db.users.findOne({where: {email}, attributes: ['id', 'email', 'password']})
+    const candidate = await db.users.findOne({where: {email}, raw: true})
 
     if (candidate) {
       const areSame = await bcrypt.compare(password, candidate.password)
-
+      delete candidate.password
       if (areSame) {
         req.session.user = candidate
         req.session.isAuthenticated = true
diff --git a/routes/courses.js b/routes/courses.js
index c549994..acbdbfc 100644
--- a/routes/courses.js
+++ b/routes/courses.js
@@ -1,6 +1,7 @@
 const {Router} = require('express')
 const {validationResult} = require('express-validator/check')
 const auth = require('../middleware/auth')
+const roles = require('../middleware/roles')
 const {courseValidators} = require('../utils/validators')
 const db = require('../models')
 const router = Router()
@@ -24,16 +25,13 @@ router.get('/', async (req, res) => {
   }
 })
 
-router.get('/:id/edit', auth, async (req, res) => {
+router.get('/:id/edit', auth, roles('admin'), async (req, res) => {
   if (!req.query.allow) {
     return res.redirect('/')
   }
 
   try {
     const course = await db.courses.findOne({where: {id: req.params.id}})
-    if (!isOwner(course, req)) {
-      return res.redirect('/courses')
-    }
 
     res.render('course-edit', {
       title: `Редактировать ${course.title}`,
@@ -44,7 +42,7 @@ router.get('/:id/edit', auth, async (req, res) => {
   }
 })
 
-router.post('/edit', auth, courseValidators, async (req, res) => {
+router.post('/edit', auth, roles('admin'), courseValidators, async (req, res) => {
   const errors = validationResult(req)
   const {id} = req.body
 
@@ -54,10 +52,6 @@ router.post('/edit', auth, courseValidators, async (req, res) => {
 
   try {
     delete req.body.id
-    const course = await db.courses.findOne({where: {id}})
-    if (!isOwner(course, req)) {
-      return res.redirect('/courses')
-    }
     await db.courses.update(req.body, {where: {id}})
     res.redirect('/courses')
   } catch (e) {
@@ -65,13 +59,14 @@ router.post('/edit', auth, courseValidators, async (req, res) => {
   }
 })
 
-router.post('/remove', auth, async (req, res) => {
+router.post('/remove', auth, roles('admin'), async (req, res) => {
   try {
     const query = {
-      id: req.body.id,
-      userId: req.user.id
+      where: {
+        id: req.body.id,
+      }
     }
-    await db.courses.destroy(query)
+    await db.courses.update({isActive: false}, query)
     res.redirect('/courses')
   } catch (e) {
     console.log(e)
diff --git a/seeders/20241211153826-add-admin-user.js b/seeders/20241211153826-add-admin-user.js
new file mode 100644
index 0000000..c1e34d2
--- /dev/null
+++ b/seeders/20241211153826-add-admin-user.js
@@ -0,0 +1,20 @@
+'use strict';
+
+/** @type {import('sequelize-cli').Migration} */
+const tableName = 'users'
+
+module.exports = {
+  up: (queryInterface, Sequelize) => {
+    return queryInterface.bulkInsert(tableName, [
+      {
+        name: 'John',
+        email: 'admin@admin.com',
+        password: '$2a$10$SIcX4.tgqqcnWmxbT9wIpuLdFgb3W8dNGevcJoUw8cmttzYl.0Yhi',
+        roles: '["admin"]'
+      },
+    ]);
+  },
+  down: (queryInterface, Sequelize) => {
+    return queryInterface.bulkDelete(tableName, null, {});
+  },
+};
diff --git a/views/courses.hbs b/views/courses.hbs
index ad908cf..92a14f3 100644
--- a/views/courses.hbs
+++ b/views/courses.hbs
@@ -16,14 +16,14 @@
         <a href="/courses/{{id}}" target="_blank">Открыть курс</a>
         {{#if @root.isAuth}}
 
-          {{#ifeq userId._id @root.userId}}
+          {{#if @root.isAdmin}}
             <a href="/courses/{{id}}/edit?allow=true">Редактировать</a>
-          {{/ifeq}}
+          {{/if}}
 
           <form action="/card/add" method="POST">
             <input type="hidden" name="_csrf" value="{{@root.csrf}}">
             <input type="hidden" name="id" value="{{id}}">
-            <button type="submit" class="btn btn-primary">Купить</button> 
+            <button type="submit" class="btn btn-primary">Купить</button>
           </form>
         {{/if}}
       </div>
@@ -33,4 +33,4 @@
 {{/each}}
 {{else}}
 <p>Курсов пока нет</p>
-{{/if}}
\ No newline at end of file
+{{/if}}
diff --git a/views/partials/navbar.hbs b/views/partials/navbar.hbs
index 1ccd094..7841e9a 100644
--- a/views/partials/navbar.hbs
+++ b/views/partials/navbar.hbs
@@ -16,29 +16,31 @@
       {{/if}}
 
       {{#if isAuth}}
-        {{#if isAdd}}
-          <li class="active"><a href="/add">Добавить курс</a></li>
-        {{else}}
-          <li><a href="/add">Добавить курс</a></li>
-        {{/if}} 
+          {{#if isAdmin}}
+              {{#if isAdd}}
+                  <li class="active"><a href="/add">Добавить курс</a></li>
+              {{else}}
+                  <li><a href="/add">Добавить курс</a></li>
+              {{/if}}
+          {{/if}}
 
         {{#if isProfile}}
           <li class="active"><a href="/profile">Профиль</a></li>
         {{else}}
           <li><a href="/profile">Профиль</a></li>
-        {{/if}} 
+        {{/if}}
 
         {{#if isCard}}
           <li class="active"><a href="/card">Корзина</a></li>
         {{else}}
           <li><a href="/card">Корзина</a></li>
-        {{/if}} 
+        {{/if}}
 
         {{#if isOrder}}
           <li class="active"><a href="/orders">Заказы</a></li>
         {{else}}
           <li><a href="/orders">Заказы</a></li>
-        {{/if}} 
+        {{/if}}
 
         <li><a href="/auth/logout">Выйти</a></li>
       {{else}}
@@ -46,8 +48,8 @@
           <li class="active"><a href="/auth/login#login">Войти</a></li>
         {{else}}
           <li><a href="/auth/login#login">Войти</a></li>
-        {{/if}} 
+        {{/if}}
       {{/if}}
     </ul>
   </div>
-</nav>
\ No newline at end of file
+</nav>
